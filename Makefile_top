SHELL = /bin/bash

ifndef CLASTOOL
    $(error "Please set the variable CLASTOOL")
endif


ROOTCONFIG  := root-config
ROOTCFLAGS  := $(shell $(ROOTCONFIG) --cflags)
ROOTLDFLAGS := $(shell $(ROOTCONFIG) --ldflags)
ROOTLIBS    := $(shell $(ROOTCONFIG) --libs)
ROOTCINT    := rootcint


SRC_DIR   := src
SLIB_DIR  := slib
STLIB_DIR := stlib
OBJ_DIR   := .obj
INC_DIR   := include
DICT_DIR  := .dicts
DEP_DIR   := .deps

CXX       = g++
CXXFLAGS  = -O2 -Wall -fPIC $(ROOTCFLAGS)

AR	  = ar
ARFLAGS	  = -cvr #create,verbose,quick (don't check for replacement, otherwise use r instead)

LD        = g++
LDFLAGS   = -O2 $(ROOTLDFLAGS)
SOFLAGS   = -Wl,-soname,$(notdir $@) -shared

INCLUDES  = -I$(INC_DIR) -I$(CLASTOOL)/include
LIBS      = -L$(CLASTOOL)/slib/${OSNAME} -lClasTool
STLIBS	  = $(CLASTOOL)/lib/${OSNAME}/*

vpath %.cxx $(SRC_DIR)
vpath %.h $(INC_DIR)
vpath %.icc $(INC_DIR)


SH_LIB     := libTIdentificator.so
ST_LIB	   := libTIdentificator.a
SRC_CLASS  := $(patsubst $(SRC_DIR)/%,%,$(wildcard $(SRC_DIR)/*.cxx))
SRC_DEP    := $(addprefix $(DEP_DIR)/,$(SRC_CLASS:.cxx=.d))
SRC_OBJ    := $(addprefix $(OBJ_DIR)/,$(SRC_CLASS:.cxx=.o))
DICT_CLASS := $(addprefix $(DICT_DIR)/,$(SRC_CLASS:.cxx=Dict.cxx))
DICT_OBJ   := $(addprefix $(OBJ_DIR)/,$(SRC_CLASS:.cxx=Dict.o))
